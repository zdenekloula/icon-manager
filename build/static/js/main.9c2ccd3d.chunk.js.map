{"version":3,"sources":["config.js","components/Layout/Layout.js","components/Layout/LayoutColumn.js","components/Layout/LayoutResizeableColumns.js","components/Icon/IconLibraryBox.js","components/Icon/IconLibraryBoxItem.js","components/Icon/IconLibraryBoxRow.js","components/Layout/LayoutLibraryIconList.js","components/Layout/LayoutColumnHeader.js","components/Layout/LayoutSearch.js","components/Layout/LayoutColumnLibrary.js","components/Icon/IconBox.js","components/Icon/IconBoxList.js","components/Icon/IconBoxItem.js","components/Layout/LayoutColumnUser.js","Manager.js","App.js","serviceWorker.js","index.js"],"names":["theme","settings","userColumnSize","columnMinWidth","StyledLayout","styled","main","_templateObject","Layout","props","react_default","a","createElement","children","StyledLayoutColumn","div","LayoutColumn_templateObject","_ref","isFixed","_ref2","isDragging","_ref3","_ref4","LayoutColumnInner","_templateObject2","Handle","_templateObject3","LayoutColumn","React","forwardRef","ref","hasHandle","LayoutColumnsContainer","LayoutResizeableColumns_templateObject","LayoutResizeableColumns","Object","assign","IconBoxContainer","IconLibraryBox_templateObject","IconBoxIcon","IconLibraryBox_templateObject2","IconBoxTitle","h2","IconLibraryBox_templateObject3","IconLibraryBox","_props$data","data","name","source","dangerouslySetInnerHTML","__html","StyledIconLibraryBoxItem","IconLibraryBoxItem_templateObject","IconLibraryBoxItem","StyledIconBoxRow","IconLibraryBoxRow_templateObject","IconLibraryBoxRow","IconGridContainer","LayoutLibraryIconList_templateObject","IconGrid","e","console","log","_this","this","icons","es","height","width","itemsPerRow","Math","floor","rowCount","ceil","length","rowHeight","overscanRowCount","rowRenderer","index","key","style","items","fromIndex","toIndex","min","_loop","i","icon","push","Icon_IconLibraryBoxItem","onClick","test","Icon_IconLibraryBox","Icon_IconLibraryBoxRow","Component","StyledLayoutColumnHeader","LayoutColumnHeader_templateObject","LayoutColumnHeader","StyledLayoutSearch","input","LayoutSearch_templateObject","LayoutSearch","type","placeholder","onChange","event","handleInput","LayoutColumnLibrary","LIBRARY_DATA","libraries","_useState","useState","_useState2","slicedToArray","libraryIcons","setLibraryIcons","_useState3","_useState4","setInputs","filterIcons","useCallback","value","filter","obj","includes","Layout_LayoutColumnHeader","Layout_LayoutSearch","persist","_event$target","target","inputs","objectSpread","defineProperty","LayoutLibraryIconList","IconBox_templateObject","IconBox_templateObject2","IconBox_templateObject3","IconBox","IconBox_IconBoxContainer","IconBox_IconBoxIcon","IconBox_IconBoxTitle","ul","IconBoxList_templateObject","IconBoxRow","IconBoxList_StyledIconBoxRow","IconBoxItem","li","IconBoxItem_templateObject","LayoutColumnUser","userIcons","projects","IconBoxList","map","Icon_IconBoxItem","Icon_IconBox","Manager","columnsHandleEl","useRef","columnsWrapperEl","columnsHandleIsDragging","setColumnsHandleIsDragging","left","right","columnsSizes","setColumnsSizes","useEffect","document","addEventListener","current","setMoveEvent","containerWidth","offsetWidth","containerLeftOffset","offsetLeft","pointerXPosition","clientX","leftColumn","max","rightColumn","calculateLeftColumn","calculateRightColumn","removeEventListener","components_Layout_Layout","Layout_LayoutColumn","Layout_LayoutResizeableColumns","isLibraryColumn","Layout_LayoutColumnLibrary","appData","Layout_LayoutColumnUser","App","loading","setLoading","setAppData","fetch","then","res","json","jsonRes","className","src_Manager","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c2ccd3d.chunk.js","sourcesContent":["export const theme = {\n  \"primary\": \"#457BF4\",\n  \"backgroundPrimary\": \"#14141C\",\n  \"backgroundSecondary\": \"#1C1C28\",\n  \"iconBackground\": \"#242633\",\n  \"handleColor\": \"#30303F\",\n  \"fontColor\": \"#fff\",\n  \"columnHeaderHeight\": 60,\n}\n\nexport const settings = {\n  \"userColumnSize\": 55, //In %\n  \"columnMinWidth\": 50, //In px\n}\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst StyledLayout = styled.main`\n  display: flex;\n`;\n\nconst Layout = (props) => {\n  return (\n      <StyledLayout {...props}>\n        {props.children}\n      </StyledLayout>\n  );\n};\n\nexport default Layout;\n","import React  from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../config'\n\nconst StyledLayoutColumn = styled.div`\n  position: relative;\n  background-color: ${({isFixed}) => isFixed ? theme.backgroundPrimary : theme.backgroundSecondary};\n  color: #fff;\n  box-sizing: border-box;\n  height: 100vh;\n  max-height: 100vh;\n  user-select: ${({isDragging}) => isDragging && \"none\"};\n  &:first-child {\n    padding: ${({isFixed}) => isFixed ? 0 : \"25px 15px 25px 10px\"};\n  }\n  &:last-child {\n    padding: 15px 15px 15px 15px;\n  }\n  ${({isFixed}) => isFixed && `\n      padding: 0;\n      width: 250px;\n  ` }\n`;\n\nconst LayoutColumnInner = styled.div`\n  max-height: 100%;\n  overflow: auto;\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst Handle = styled.div`\n  position: absolute;\n  left: -5px;\n  top: 0;\n  width: 10px;\n  height: 100%;\n  background: ${theme.handleColor};\n  cursor: col-resize;\n  z-index: 100;\n`;\n\nconst LayoutColumn = React.forwardRef((props, ref) => {\n  return (\n      <StyledLayoutColumn {...props}>\n        {props.hasHandle &&\n          <Handle ref={ref}></Handle>\n        }\n        <LayoutColumnInner>\n          {props.children}\n        </LayoutColumnInner>\n      </StyledLayoutColumn>\n  );\n});\n\nexport default LayoutColumn;\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst LayoutColumnsContainer = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n`;\n\nconst LayoutResizeableColumns = React.forwardRef((props, ref) => {\n  return (\n      <LayoutColumnsContainer {...props} ref={ref}>\n        {props.children}\n      </LayoutColumnsContainer>\n  );\n});\n\nexport default LayoutResizeableColumns;\n","import React  from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../config'\n\nexport const IconBoxContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 15px;\n  border-radius: 5px;\n  background: ${theme.iconBackground};\n  max-width: 100%;\n  height: 100%;\n  overflow: hidden;\n  text-align: center;\n`;\n\nconst IconBoxIcon = styled.div`\n  width: 100%;\n  color: ${theme.fontColor};\n  svg {\n    max-height: 28px;\n    fill: currentColor;\n  }\n`;\n\nconst IconBoxTitle = styled.h2`\n  display: block;\n  font-size: 14px;\n  text-align: center;\n  margin: 10px 0 0 0;\n  width: 100%;\n  text-overflow: ellipsis;\n`;\n\nconst IconLibraryBox = (props) => {\n  const { name, source } = props.data;\n  return (\n    <IconBoxContainer {...props}>\n      <IconBoxIcon dangerouslySetInnerHTML={{__html: source}} ></IconBoxIcon>\n      <IconBoxTitle>{name}</IconBoxTitle>\n    </IconBoxContainer>\n  );\n};\n\nexport default IconLibraryBox;\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst StyledIconLibraryBoxItem = styled.div`\n  vertical-align: top;\n  text-align: left;\n  letter-spacing: normal;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n  max-width: 350px;\n  box-sizing: border-box;\n  padding: 0 10px 20px 10px;\n`;\n\nconst IconLibraryBoxItem = (props) => {\n  return (\n      <StyledIconLibraryBoxItem {...props}>\n        {props.children}\n      </StyledIconLibraryBoxItem>\n  );\n};\n\nexport default IconLibraryBoxItem;\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst StyledIconBoxRow = styled.div`\n  display: flex;\n  padding: 0;\n  margin-bottom: 20px;\n`;\n\nconst IconLibraryBoxRow = (props) => {\n  return (\n      <StyledIconBoxRow {...props}>\n        {props.children}\n      </StyledIconBoxRow>\n  );\n};\n\nexport default IconLibraryBoxRow;\n","import React, { Component } from \"react\";\nimport { List, AutoSizer } from \"react-virtualized\";\nimport { theme } from '../../config'\n\nimport IconBox from '../Icon/IconLibraryBox'\nimport IconBoxItem from '../Icon/IconLibraryBoxItem'\nimport IconBoxRow from '../Icon/IconLibraryBoxRow'\n\nimport styled from 'styled-components';\n\nconst IconGridContainer = styled.div`\n  margin-top: ${theme.columnHeaderHeight - 5}px;\n  height: calc(100vh  - 105px);\n  overflow-x: hidden !important;\n\n  .ReactVirtualized__List,\n  .ReactVirtualized__Grid__innerScrollContainer {\n    overflow-x: hidden !important;\n  }\n\n  .ReactVirtualized__List:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n  * ::-webkit-scrollbar {\n    width: 8px;\n  }\n \n  * ::-webkit-scrollbar-thumb {\n    background: rgba(255,255,255,0.4);\n    border-radius: 20px;\n  }\n\n  * ::-webkit-scrollbar-track {\n    background: transparent;\n    border-radius: 20px;\n  }\n`;\n\nconst CARD_HEIGHT = 130;\n\nclass IconGrid extends Component {\n  test(e) {\n    console.log(e);\n  }\n  render() {\n    const { icons } = this.props;\n\n    return (\n      <IconGridContainer>\n       <AutoSizer>\n          {({ height, width }) => {\n            let itemsPerRow = Math.floor(width / CARD_HEIGHT) > 4 ? 4 : Math.floor(width / CARD_HEIGHT) || 1;\n            \n            const rowCount = Math.ceil(icons.length / itemsPerRow);\n\n            return (\n\n                <List\n                  width={width}\n                  height={height}\n                  rowCount={rowCount}\n                  rowHeight={CARD_HEIGHT}\n                  overscanRowCount={0}\n                  rowRenderer={({ index, key, style }) => {\n                    const items = [];\n                    const fromIndex = index * itemsPerRow;\n                    const toIndex = Math.min(\n                      fromIndex + itemsPerRow,\n                      icons.length\n                    );\n\n                    for (let i = fromIndex; i < toIndex; i++) {\n                      let icon = icons[i];\n                      items.push(\n                        <IconBoxItem key={i} onClick={(e) => this.test(icon.name)}>\n                          <IconBox data={icon} />\n                        </IconBoxItem>\n                      );\n                    }\n\n                    return (\n                      <IconBoxRow key={key} style={style}>\n                        {items}\n                      </IconBoxRow>\n                    );\n                  }}\n                />\n            );\n          }}\n        </AutoSizer>\n      </IconGridContainer>\n    );\n  }\n}\n\nexport default IconGrid;","import React from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../config'\n\nconst StyledLayoutColumnHeader = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: ${theme.columnHeaderHeight}px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  background: ${theme.backgroundSecondary};\n  z-index: 99;\n`;\n\nconst LayoutColumnHeader = (props) => {\n  \n  return (\n    <StyledLayoutColumnHeader {...props}>\n      {props.children}\n    </StyledLayoutColumnHeader>\n  );\n};\n\nexport default LayoutColumnHeader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLayoutSearch = styled.input`\n  height: 100%;\n  font-weight: 700;\n  background: transparent;\n  border: 0;\n  font-size: 18px;\n  padding: 0 20px;\n  width: 100%;\n  color: #fff;\n\n  &::-webkit-input-placeholder {\n    color: rgba(255, 255, 255, 0.54);\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst LayoutSearch = (props) => {\n  const handleInput = (event) => props.onChange(event);\n  \n  return (\n      <StyledLayoutSearch type=\"text\" {...props} placeholder=\"Filter...\" onChange={(event) => handleInput(event)} />\n  );\n};\n\nexport default LayoutSearch;\n","import React, { useState, useCallback } from 'react';\nimport LayoutLibraryIconList from './LayoutLibraryIconList';\nimport LayoutColumnHeader from './LayoutColumnHeader';\nimport LayoutSearch from './LayoutSearch';\n\n\nconst LayoutColumnLibrary = (props) => {\n  const LIBRARY_DATA = props.data.libraries[0].icons;\n\n  const [libraryIcons, setLibraryIcons] = useState(LIBRARY_DATA);\n  const [inputs, setInputs] = useState({});\n  \n  //This is going to be dynamic, its hardcoded now to [0]\n  //const libraryIcons = props.data && props.data.libraries[0].icons;\n\n  const filterIcons = useCallback((value) => {\n    const filteredData =  LIBRARY_DATA.filter(obj => {\n      return obj.name.includes(value);\n    });\n    return filteredData;\n  }, [LIBRARY_DATA]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    const { name, value } = event.target\n\n    if(value.length > 0) {\n      setInputs(inputs => ({...inputs, [name]: value}));\n      setLibraryIcons(filterIcons(value));\n    } else {\n      setInputs(inputs => ({...inputs, [name]: value}));\n      setLibraryIcons(props.data.libraries[0].icons);\n    }\n  }\n\n  return (\n    <div {...props}>\n      <LayoutColumnHeader>\n        <LayoutSearch type=\"text\" placeholder=\"Searching...\" name=\"librarySearch\" onChange={handleInputChange} />\n      </LayoutColumnHeader>\n      <div>\n        {libraryIcons && <LayoutLibraryIconList icons={libraryIcons} /> }\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutColumnLibrary;\n","import React  from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../config'\n\nexport const IconBoxContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 15px;\n  border-radius: 5px;\n  background: ${theme.iconBackground};\n  max-width: 200px;\n`;\n\nconst IconBoxIcon = styled.div`\n  width: 100%;\n  color: ${theme.fontColor};\n  svg {\n    max-height: 28px;\n    fill: currentColor;\n  }\n`;\n\nconst IconBoxTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  text-align: center;\n  margin: 10px 0 0 0;\n  width: 100%;\n  text-overflow: ellipsis;\n`;\n\nconst IconBox = (props) => {\n  const { name, source } = props.data;\n  return (\n    <IconBoxContainer {...props}>\n      <IconBoxIcon dangerouslySetInnerHTML={{__html: source}} ></IconBoxIcon>\n      <IconBoxTitle>{name}</IconBoxTitle>\n    </IconBoxContainer>\n  );\n};\n\nexport default IconBox;\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst StyledIconBoxRow = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n`;\n\nconst IconBoxRow = (props) => {\n  return (\n      <StyledIconBoxRow {...props}>\n        {props.children}\n      </StyledIconBoxRow>\n  );\n};\n\nexport default IconBoxRow;\n","import React  from 'react';\nimport styled from 'styled-components';\n\nconst IconBoxItem = styled.li`\n  vertical-align: top;\n  text-align: left;\n  letter-spacing: normal;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 130px;\n  width: 100%;\n  position: relative;\n  border-left: 15px solid transparent;\n  margin-bottom: 15px;\n  max-width: 20%;\n  min-width: 130px;\n`;\n\nconst IconBox = (props) => {\n  return (\n      <IconBoxItem {...props}>\n        {props.children}\n      </IconBoxItem>\n  );\n};\n\nexport default IconBox;\n","import React from 'react';\nimport IconBox from \"../Icon/IconBox\";\nimport IconBoxList from \"../Icon/IconBoxList\";\nimport IconBoxItem from \"../Icon/IconBoxItem\";\n\nconst LayoutColumnUser = (props) => {\n  //This needs to be dynamic, its hardcoded now to [0]\n  const userIcons = props.data && props.data.projects[0].icons;\n  return (\n      <div {...props}>\n        <IconBoxList>\n          {props.data &&\n          userIcons.map((icon, index) => {\n            return(\n              <IconBoxItem key={index}>\n                <IconBox data={icon} />\n              </IconBoxItem>\n            )\n          })}\n        </IconBoxList>\n      </div>\n  );\n};\n\nexport default LayoutColumnUser;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { settings } from './config'\nimport Layout from './components/Layout/Layout'\nimport LayoutColumn from './components/Layout/LayoutColumn'\nimport LayoutResizeableColumns from './components/Layout/LayoutResizeableColumns'\nimport LayoutColumnLibrary from \"./components/Layout/LayoutColumnLibrary\";\nimport LayoutColumnUser from \"./components/Layout/LayoutColumnUser\";\n\nfunction Manager(props) {\n  const columnsHandleEl = useRef(null);\n  const columnsWrapperEl = useRef(null);\n  const [columnsHandleIsDragging, setColumnsHandleIsDragging] = useState(false);\n  const [columnsSizes, setColumnsSizes] = useState({\n    left: 100 - settings.userColumnSize,\n    right: settings.userColumnSize,\n  });\n  \n  useEffect(() => {\n    document.addEventListener('mousedown', (event) => {\n      if (event.target === columnsHandleEl.current) {\n        setColumnsHandleIsDragging(true);\n      }\n    });\n\n    const setMoveEvent = (event) => {\n      if (!columnsHandleIsDragging) {\n        return false\n      }\n      const containerWidth = columnsWrapperEl.current.offsetWidth;\n      const containerLeftOffset = columnsWrapperEl.current.offsetLeft;\n      const pointerXPosition = event.clientX - containerLeftOffset;\n      const boxMinWidth = 250;\n\n      const leftColumn = (Math.max(boxMinWidth, pointerXPosition) / containerWidth) * 100;\n      const rightColumn = (Math.max(boxMinWidth, (containerWidth - pointerXPosition)) / containerWidth) * 100;\n\n      const calculateLeftColumn = () => {\n        if (!(leftColumn + rightColumn > 100)) {\n          return leftColumn;\n        }\n      };\n\n      const calculateRightColumn = () => {\n        if (!(leftColumn + rightColumn > 100)) {\n          return rightColumn;\n        }\n      };\n\n      setColumnsSizes({\n        left: calculateLeftColumn(),\n        right: calculateRightColumn()\n      });\n\n    };\n\n    document.addEventListener('mousemove', setMoveEvent);\n    document.addEventListener('mouseup', function (event) {\n      setColumnsHandleIsDragging(false);\n    });\n\n    return () => {\n      document.removeEventListener(\"mousemove\", setMoveEvent);\n    };\n  }, [columnsHandleIsDragging]);\n\n  return (\n      <Layout>\n        <LayoutColumn isFixed>\n          Fixed Column\n        </LayoutColumn>\n        <LayoutResizeableColumns ref={columnsWrapperEl}>\n          <LayoutColumn isDragging={columnsHandleIsDragging} style={{width: columnsSizes.left + '%'}} isLibraryColumn>\n            <LayoutColumnLibrary data={props.appData} />\n          </LayoutColumn>\n          <LayoutColumn isDragging={columnsHandleIsDragging} style={{width: columnsSizes.right + '%'}} ref={columnsHandleEl} hasHandle>\n            <LayoutColumnUser data={props.appData}/>\n          </LayoutColumn>\n        </LayoutResizeableColumns>\n      </Layout>\n  );\n}\n\nexport default Manager;\n","import React, {useState, useEffect } from 'react';\nimport Manager from './Manager';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [appData, setAppData] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/init')\n      .then(res => res.json())\n      .then(jsonRes => {\n        setAppData(jsonRes);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n      <div className=\"App\">\n        { !loading && <Manager appData={appData} />}\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}